// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: bucket.proto

package bucket

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// model
// 模糊查询桶
type GetBucketByBucketNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	Username   string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetBucketByBucketNameReq) Reset() {
	*x = GetBucketByBucketNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBucketByBucketNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketByBucketNameReq) ProtoMessage() {}

func (x *GetBucketByBucketNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketByBucketNameReq.ProtoReflect.Descriptor instead.
func (*GetBucketByBucketNameReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{0}
}

func (x *GetBucketByBucketNameReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *GetBucketByBucketNameReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// 通过用户名获取桶信息
type GetAllBucketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetAllBucketReq) Reset() {
	*x = GetAllBucketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBucketReq) ProtoMessage() {}

func (x *GetAllBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBucketReq.ProtoReflect.Descriptor instead.
func (*GetAllBucketReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllBucketReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetMyBucketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetMyBucketReq) Reset() {
	*x = GetMyBucketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyBucketReq) ProtoMessage() {}

func (x *GetMyBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyBucketReq.ProtoReflect.Descriptor instead.
func (*GetMyBucketReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{2}
}

func (x *GetMyBucketReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetManageBucketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetManageBucketReq) Reset() {
	*x = GetManageBucketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetManageBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManageBucketReq) ProtoMessage() {}

func (x *GetManageBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManageBucketReq.ProtoReflect.Descriptor instead.
func (*GetManageBucketReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{3}
}

func (x *GetManageBucketReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// 桶详细信息
type BucketInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username       string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	BucketName     string `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	CapacityCur    string `protobuf:"bytes,4,opt,name=capacityCur,proto3" json:"capacityCur,omitempty"`
	ObjectNum      int64  `protobuf:"varint,5,opt,name=objectNum,proto3" json:"objectNum,omitempty"`
	Permission     int64  `protobuf:"varint,6,opt,name=permission,proto3" json:"permission,omitempty"`
	UserPermission int64  `protobuf:"varint,7,opt,name=userPermission,proto3" json:"userPermission,omitempty"`
	CreateTime     string `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime     string `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *BucketInfoResp) Reset() {
	*x = BucketInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketInfoResp) ProtoMessage() {}

func (x *BucketInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketInfoResp.ProtoReflect.Descriptor instead.
func (*BucketInfoResp) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{4}
}

func (x *BucketInfoResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BucketInfoResp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BucketInfoResp) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *BucketInfoResp) GetCapacityCur() string {
	if x != nil {
		return x.CapacityCur
	}
	return ""
}

func (x *BucketInfoResp) GetObjectNum() int64 {
	if x != nil {
		return x.ObjectNum
	}
	return 0
}

func (x *BucketInfoResp) GetPermission() int64 {
	if x != nil {
		return x.Permission
	}
	return 0
}

func (x *BucketInfoResp) GetUserPermission() int64 {
	if x != nil {
		return x.UserPermission
	}
	return 0
}

func (x *BucketInfoResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *BucketInfoResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 返回桶信息响应体
type AllBucketResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketList []*BucketInfoResp `protobuf:"bytes,1,rep,name=bucketList,proto3" json:"bucketList,omitempty"`
}

func (x *AllBucketResp) Reset() {
	*x = AllBucketResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllBucketResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllBucketResp) ProtoMessage() {}

func (x *AllBucketResp) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllBucketResp.ProtoReflect.Descriptor instead.
func (*AllBucketResp) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{5}
}

func (x *AllBucketResp) GetBucketList() []*BucketInfoResp {
	if x != nil {
		return x.BucketList
	}
	return nil
}

// 查询用户拥有桶数量
type CountBucketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *CountBucketReq) Reset() {
	*x = CountBucketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountBucketReq) ProtoMessage() {}

func (x *CountBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountBucketReq.ProtoReflect.Descriptor instead.
func (*CountBucketReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{6}
}

func (x *CountBucketReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// 返回用户拥有桶数量
type CountBucketResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketNum int64 `protobuf:"varint,1,opt,name=bucketNum,proto3" json:"bucketNum,omitempty"`
}

func (x *CountBucketResp) Reset() {
	*x = CountBucketResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountBucketResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountBucketResp) ProtoMessage() {}

func (x *CountBucketResp) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountBucketResp.ProtoReflect.Descriptor instead.
func (*CountBucketResp) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{7}
}

func (x *CountBucketResp) GetBucketNum() int64 {
	if x != nil {
		return x.BucketNum
	}
	return 0
}

// 创建桶桶详细信息
type CreateBucketInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string  `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	BucketName  string  `protobuf:"bytes,2,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	CapacityCur float32 `protobuf:"fixed32,3,opt,name=capacityCur,proto3" json:"capacityCur,omitempty"`
	ObjectNum   int64   `protobuf:"varint,4,opt,name=objectNum,proto3" json:"objectNum,omitempty"`
	Permission  int64   `protobuf:"varint,5,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *CreateBucketInfoReq) Reset() {
	*x = CreateBucketInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketInfoReq) ProtoMessage() {}

func (x *CreateBucketInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketInfoReq.ProtoReflect.Descriptor instead.
func (*CreateBucketInfoReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{8}
}

func (x *CreateBucketInfoReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateBucketInfoReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *CreateBucketInfoReq) GetCapacityCur() float32 {
	if x != nil {
		return x.CapacityCur
	}
	return 0
}

func (x *CreateBucketInfoReq) GetObjectNum() int64 {
	if x != nil {
		return x.ObjectNum
	}
	return 0
}

func (x *CreateBucketInfoReq) GetPermission() int64 {
	if x != nil {
		return x.Permission
	}
	return 0
}

// 成功操作统一返回
type SucResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SucResp) Reset() {
	*x = SucResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SucResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SucResp) ProtoMessage() {}

func (x *SucResp) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SucResp.ProtoReflect.Descriptor instead.
func (*SucResp) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{9}
}

func (x *SucResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 写入hashcode
type HashCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashcode string `protobuf:"bytes,1,opt,name=hashcode,proto3" json:"hashcode,omitempty"`
}

func (x *HashCodeReq) Reset() {
	*x = HashCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashCodeReq) ProtoMessage() {}

func (x *HashCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashCodeReq.ProtoReflect.Descriptor instead.
func (*HashCodeReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{10}
}

func (x *HashCodeReq) GetHashcode() string {
	if x != nil {
		return x.Hashcode
	}
	return ""
}

// 删除桶
type DelBucketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
}

func (x *DelBucketReq) Reset() {
	*x = DelBucketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBucketReq) ProtoMessage() {}

func (x *DelBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBucketReq.ProtoReflect.Descriptor instead.
func (*DelBucketReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{11}
}

func (x *DelBucketReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

// 权限统一请求体
type PolicyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username   string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	BucketName string `protobuf:"bytes,2,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	Permission string `protobuf:"bytes,3,opt,name=permission,proto3" json:"permission,omitempty"` // 0 读写权限 1 读权限 2 写权限 3 表示桶的拥有者
}

func (x *PolicyReq) Reset() {
	*x = PolicyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyReq) ProtoMessage() {}

func (x *PolicyReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyReq.ProtoReflect.Descriptor instead.
func (*PolicyReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{12}
}

func (x *PolicyReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PolicyReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *PolicyReq) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type UpdatePolicyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	BucketName    string `protobuf:"bytes,2,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	OldPermission string `protobuf:"bytes,3,opt,name=oldPermission,proto3" json:"oldPermission,omitempty"`
	NewPermission string `protobuf:"bytes,4,opt,name=newPermission,proto3" json:"newPermission,omitempty"`
}

func (x *UpdatePolicyReq) Reset() {
	*x = UpdatePolicyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePolicyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePolicyReq) ProtoMessage() {}

func (x *UpdatePolicyReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePolicyReq.ProtoReflect.Descriptor instead.
func (*UpdatePolicyReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{13}
}

func (x *UpdatePolicyReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdatePolicyReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *UpdatePolicyReq) GetOldPermission() string {
	if x != nil {
		return x.OldPermission
	}
	return ""
}

func (x *UpdatePolicyReq) GetNewPermission() string {
	if x != nil {
		return x.NewPermission
	}
	return ""
}

type GetPolicyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username   string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	BucketName string `protobuf:"bytes,2,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
}

func (x *GetPolicyReq) Reset() {
	*x = GetPolicyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyReq) ProtoMessage() {}

func (x *GetPolicyReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyReq.ProtoReflect.Descriptor instead.
func (*GetPolicyReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{14}
}

func (x *GetPolicyReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetPolicyReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

type GetPolicyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPermission int64 `protobuf:"varint,1,opt,name=userPermission,proto3" json:"userPermission,omitempty"` // 0 读写权限 1 读权限 2 写权限 3 表示桶的拥有者
}

func (x *GetPolicyResp) Reset() {
	*x = GetPolicyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyResp) ProtoMessage() {}

func (x *GetPolicyResp) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyResp.ProtoReflect.Descriptor instead.
func (*GetPolicyResp) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{15}
}

func (x *GetPolicyResp) GetUserPermission() int64 {
	if x != nil {
		return x.UserPermission
	}
	return 0
}

type DelBucketAllPolicyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
}

func (x *DelBucketAllPolicyReq) Reset() {
	*x = DelBucketAllPolicyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBucketAllPolicyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBucketAllPolicyReq) ProtoMessage() {}

func (x *DelBucketAllPolicyReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBucketAllPolicyReq.ProtoReflect.Descriptor instead.
func (*DelBucketAllPolicyReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{16}
}

func (x *DelBucketAllPolicyReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

// 更新桶信息
type UpdateBucketSizeAndNumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	Size       int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	ObjectNum  int64  `protobuf:"varint,3,opt,name=objectNum,proto3" json:"objectNum,omitempty"`
}

func (x *UpdateBucketSizeAndNumReq) Reset() {
	*x = UpdateBucketSizeAndNumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBucketSizeAndNumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBucketSizeAndNumReq) ProtoMessage() {}

func (x *UpdateBucketSizeAndNumReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBucketSizeAndNumReq.ProtoReflect.Descriptor instead.
func (*UpdateBucketSizeAndNumReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateBucketSizeAndNumReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *UpdateBucketSizeAndNumReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UpdateBucketSizeAndNumReq) GetObjectNum() int64 {
	if x != nil {
		return x.ObjectNum
	}
	return 0
}

// 删除桶里全部哈希
type DelBucketAllHashReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
}

func (x *DelBucketAllHashReq) Reset() {
	*x = DelBucketAllHashReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelBucketAllHashReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelBucketAllHashReq) ProtoMessage() {}

func (x *DelBucketAllHashReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelBucketAllHashReq.ProtoReflect.Descriptor instead.
func (*DelBucketAllHashReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{18}
}

func (x *DelBucketAllHashReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

// 桶里全部拥有权限的用户（桶里全部协作者）
type UserPolicyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username       string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	BucketName     string `protobuf:"bytes,2,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	UserPermission string `protobuf:"bytes,3,opt,name=userPermission,proto3" json:"userPermission,omitempty"`
}

func (x *UserPolicyInfo) Reset() {
	*x = UserPolicyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPolicyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPolicyInfo) ProtoMessage() {}

func (x *UserPolicyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPolicyInfo.ProtoReflect.Descriptor instead.
func (*UserPolicyInfo) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{19}
}

func (x *UserPolicyInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserPolicyInfo) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *UserPolicyInfo) GetUserPermission() string {
	if x != nil {
		return x.UserPermission
	}
	return ""
}

type GetAllBucketPolicyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
}

func (x *GetAllBucketPolicyReq) Reset() {
	*x = GetAllBucketPolicyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllBucketPolicyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBucketPolicyReq) ProtoMessage() {}

func (x *GetAllBucketPolicyReq) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBucketPolicyReq.ProtoReflect.Descriptor instead.
func (*GetAllBucketPolicyReq) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{20}
}

func (x *GetAllBucketPolicyReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

type GetAllBucketPolicyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyList []*UserPolicyInfo `protobuf:"bytes,1,rep,name=policyList,proto3" json:"policyList,omitempty"`
}

func (x *GetAllBucketPolicyResp) Reset() {
	*x = GetAllBucketPolicyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllBucketPolicyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllBucketPolicyResp) ProtoMessage() {}

func (x *GetAllBucketPolicyResp) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllBucketPolicyResp.ProtoReflect.Descriptor instead.
func (*GetAllBucketPolicyResp) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{21}
}

func (x *GetAllBucketPolicyResp) GetPolicyList() []*UserPolicyInfo {
	if x != nil {
		return x.PolicyList
	}
	return nil
}

// 删除该用户所有权限 在注销用户时调用
type DelUserAllPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *DelUserAllPolicy) Reset() {
	*x = DelUserAllPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUserAllPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserAllPolicy) ProtoMessage() {}

func (x *DelUserAllPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserAllPolicy.ProtoReflect.Descriptor instead.
func (*DelUserAllPolicy) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{22}
}

func (x *DelUserAllPolicy) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

// 更新桶访问策略
type UpdateBucketPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	Permission string `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *UpdateBucketPermission) Reset() {
	*x = UpdateBucketPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBucketPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBucketPermission) ProtoMessage() {}

func (x *UpdateBucketPermission) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBucketPermission.ProtoReflect.Descriptor instead.
func (*UpdateBucketPermission) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateBucketPermission) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *UpdateBucketPermission) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

var File_bucket_proto protoreflect.FileDescriptor

var file_bucket_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x42, 0x79, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2d,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa6, 0x02,
	0x0a, 0x0e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x43, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x43, 0x75, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x2c, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a,
	0x0f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0xb1,
	0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x43, 0x75,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x43, 0x75, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x23, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x29, 0x0a, 0x0b, 0x48, 0x61, 0x73, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x2e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x67, 0x0a, 0x09, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f,
	0x6c, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x6c, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x41, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x75, 0x6d, 0x22, 0x35, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x0e, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x37, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xd7, 0x0a, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x32, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14,
	0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x75,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x4d, 0x79, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x6c, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x6c, 0x6c, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x17, 0x67, 0x65, 0x74,
	0x4d, 0x79, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x41, 0x6c, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a,
	0x1b, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x42, 0x79, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x42,
	0x79, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x6c, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x53, 0x75, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x1a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x41, 0x6e, 0x64, 0x4e, 0x75,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x41,
	0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x53, 0x75, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x16, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x1a, 0x0f, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x48, 0x61, 0x73, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x48, 0x61, 0x73,
	0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x53, 0x75, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65, 0x6c,
	0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33,
	0x0a, 0x0b, 0x68, 0x61, 0x73, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x11, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x11, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x53, 0x75, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x17, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x36, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x53, 0x75, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x09, 0x67, 0x65,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x14, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x12, 0x64, 0x65, 0x6c,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x1d, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0f,
	0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3d, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x18, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a, 0x0f, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40,
	0x0a, 0x10, 0x64, 0x65, 0x6c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1b, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a,
	0x0f, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bucket_proto_rawDescOnce sync.Once
	file_bucket_proto_rawDescData = file_bucket_proto_rawDesc
)

func file_bucket_proto_rawDescGZIP() []byte {
	file_bucket_proto_rawDescOnce.Do(func() {
		file_bucket_proto_rawDescData = protoimpl.X.CompressGZIP(file_bucket_proto_rawDescData)
	})
	return file_bucket_proto_rawDescData
}

var file_bucket_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_bucket_proto_goTypes = []interface{}{
	(*GetBucketByBucketNameReq)(nil),  // 0: bucket.GetBucketByBucketNameReq
	(*GetAllBucketReq)(nil),           // 1: bucket.GetAllBucketReq
	(*GetMyBucketReq)(nil),            // 2: bucket.GetMyBucketReq
	(*GetManageBucketReq)(nil),        // 3: bucket.GetManageBucketReq
	(*BucketInfoResp)(nil),            // 4: bucket.BucketInfoResp
	(*AllBucketResp)(nil),             // 5: bucket.AllBucketResp
	(*CountBucketReq)(nil),            // 6: bucket.CountBucketReq
	(*CountBucketResp)(nil),           // 7: bucket.CountBucketResp
	(*CreateBucketInfoReq)(nil),       // 8: bucket.CreateBucketInfoReq
	(*SucResp)(nil),                   // 9: bucket.SucResp
	(*HashCodeReq)(nil),               // 10: bucket.HashCodeReq
	(*DelBucketReq)(nil),              // 11: bucket.DelBucketReq
	(*PolicyReq)(nil),                 // 12: bucket.PolicyReq
	(*UpdatePolicyReq)(nil),           // 13: bucket.UpdatePolicyReq
	(*GetPolicyReq)(nil),              // 14: bucket.GetPolicyReq
	(*GetPolicyResp)(nil),             // 15: bucket.GetPolicyResp
	(*DelBucketAllPolicyReq)(nil),     // 16: bucket.DelBucketAllPolicyReq
	(*UpdateBucketSizeAndNumReq)(nil), // 17: bucket.UpdateBucketSizeAndNumReq
	(*DelBucketAllHashReq)(nil),       // 18: bucket.DelBucketAllHashReq
	(*UserPolicyInfo)(nil),            // 19: bucket.UserPolicyInfo
	(*GetAllBucketPolicyReq)(nil),     // 20: bucket.GetAllBucketPolicyReq
	(*GetAllBucketPolicyResp)(nil),    // 21: bucket.GetAllBucketPolicyResp
	(*DelUserAllPolicy)(nil),          // 22: bucket.DelUserAllPolicy
	(*UpdateBucketPermission)(nil),    // 23: bucket.UpdateBucketPermission
}
var file_bucket_proto_depIdxs = []int32{
	4,  // 0: bucket.AllBucketResp.bucketList:type_name -> bucket.BucketInfoResp
	19, // 1: bucket.GetAllBucketPolicyResp.policyList:type_name -> bucket.UserPolicyInfo
	11, // 2: bucket.bucket.delBucket:input_type -> bucket.DelBucketReq
	2,  // 3: bucket.bucket.getMyBucket:input_type -> bucket.GetMyBucketReq
	3,  // 4: bucket.bucket.getManageBucket:input_type -> bucket.GetManageBucketReq
	0,  // 5: bucket.bucket.getMyBucketByBucketName:input_type -> bucket.GetBucketByBucketNameReq
	0,  // 6: bucket.bucket.getManageBucketByBucketName:input_type -> bucket.GetBucketByBucketNameReq
	6,  // 7: bucket.bucket.countBucket:input_type -> bucket.CountBucketReq
	8,  // 8: bucket.bucket.createBucketInfo:input_type -> bucket.CreateBucketInfoReq
	17, // 9: bucket.bucket.updateBucketSizeAndNumInfo:input_type -> bucket.UpdateBucketSizeAndNumReq
	23, // 10: bucket.bucket.updateBucketPermission:input_type -> bucket.UpdateBucketPermission
	10, // 11: bucket.bucket.addHashCode:input_type -> bucket.HashCodeReq
	10, // 12: bucket.bucket.delHashCode:input_type -> bucket.HashCodeReq
	10, // 13: bucket.bucket.hasHashCode:input_type -> bucket.HashCodeReq
	12, // 14: bucket.bucket.addPolicy:input_type -> bucket.PolicyReq
	12, // 15: bucket.bucket.removePolicy:input_type -> bucket.PolicyReq
	13, // 16: bucket.bucket.updatePolicy:input_type -> bucket.UpdatePolicyReq
	12, // 17: bucket.bucket.verifyPermission:input_type -> bucket.PolicyReq
	14, // 18: bucket.bucket.getPolicy:input_type -> bucket.GetPolicyReq
	20, // 19: bucket.bucket.getAllBucketPolicy:input_type -> bucket.GetAllBucketPolicyReq
	16, // 20: bucket.bucket.delBucketAllPolicy:input_type -> bucket.DelBucketAllPolicyReq
	22, // 21: bucket.bucket.delUserAllPolicy:input_type -> bucket.DelUserAllPolicy
	18, // 22: bucket.bucket.delBucketAllHash:input_type -> bucket.DelBucketAllHashReq
	9,  // 23: bucket.bucket.delBucket:output_type -> bucket.SucResp
	5,  // 24: bucket.bucket.getMyBucket:output_type -> bucket.AllBucketResp
	5,  // 25: bucket.bucket.getManageBucket:output_type -> bucket.AllBucketResp
	5,  // 26: bucket.bucket.getMyBucketByBucketName:output_type -> bucket.AllBucketResp
	5,  // 27: bucket.bucket.getManageBucketByBucketName:output_type -> bucket.AllBucketResp
	7,  // 28: bucket.bucket.countBucket:output_type -> bucket.CountBucketResp
	9,  // 29: bucket.bucket.createBucketInfo:output_type -> bucket.SucResp
	9,  // 30: bucket.bucket.updateBucketSizeAndNumInfo:output_type -> bucket.SucResp
	9,  // 31: bucket.bucket.updateBucketPermission:output_type -> bucket.SucResp
	9,  // 32: bucket.bucket.addHashCode:output_type -> bucket.SucResp
	9,  // 33: bucket.bucket.delHashCode:output_type -> bucket.SucResp
	9,  // 34: bucket.bucket.hasHashCode:output_type -> bucket.SucResp
	9,  // 35: bucket.bucket.addPolicy:output_type -> bucket.SucResp
	9,  // 36: bucket.bucket.removePolicy:output_type -> bucket.SucResp
	9,  // 37: bucket.bucket.updatePolicy:output_type -> bucket.SucResp
	9,  // 38: bucket.bucket.verifyPermission:output_type -> bucket.SucResp
	15, // 39: bucket.bucket.getPolicy:output_type -> bucket.GetPolicyResp
	21, // 40: bucket.bucket.getAllBucketPolicy:output_type -> bucket.GetAllBucketPolicyResp
	9,  // 41: bucket.bucket.delBucketAllPolicy:output_type -> bucket.SucResp
	9,  // 42: bucket.bucket.delUserAllPolicy:output_type -> bucket.SucResp
	9,  // 43: bucket.bucket.delBucketAllHash:output_type -> bucket.SucResp
	23, // [23:44] is the sub-list for method output_type
	2,  // [2:23] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_bucket_proto_init() }
func file_bucket_proto_init() {
	if File_bucket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bucket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBucketByBucketNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllBucketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyBucketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetManageBucketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BucketInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllBucketResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountBucketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountBucketResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SucResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBucketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePolicyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPolicyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPolicyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBucketAllPolicyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBucketSizeAndNumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelBucketAllHashReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPolicyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllBucketPolicyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllBucketPolicyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUserAllPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBucketPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bucket_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bucket_proto_goTypes,
		DependencyIndexes: file_bucket_proto_depIdxs,
		MessageInfos:      file_bucket_proto_msgTypes,
	}.Build()
	File_bucket_proto = out.File
	file_bucket_proto_rawDesc = nil
	file_bucket_proto_goTypes = nil
	file_bucket_proto_depIdxs = nil
}
