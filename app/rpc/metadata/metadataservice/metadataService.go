// Code generated by goctl. DO NOT EDIT.
// Source: metadata.proto

package metadataservice

import (
	"context"

	"oos-system/app/rpc/metadata/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BucketInfoReq  = pb.BucketInfoReq
	BucketInfoResp = pb.BucketInfoResp
	CreateReq      = pb.CreateReq
	CreateResp     = pb.CreateResp
	DeleteReq      = pb.DeleteReq
	DeleteResp     = pb.DeleteResp
	GetReq         = pb.GetReq
	GetResp        = pb.GetResp
	ObjectInfo     = pb.ObjectInfo
	PutReq         = pb.PutReq
	PutResp        = pb.PutResp

	MetadataService interface {
		Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetResp, error)
		Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error)
		Put(ctx context.Context, in *PutReq, opts ...grpc.CallOption) (*PutResp, error)
		Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteResp, error)
		BucketInfo(ctx context.Context, in *BucketInfoReq, opts ...grpc.CallOption) (*BucketInfoResp, error)
	}

	defaultMetadataService struct {
		cli zrpc.Client
	}
)

func NewMetadataService(cli zrpc.Client) MetadataService {
	return &defaultMetadataService{
		cli: cli,
	}
}

func (m *defaultMetadataService) Get(ctx context.Context, in *GetReq, opts ...grpc.CallOption) (*GetResp, error) {
	client := pb.NewMetadataServiceClient(m.cli.Conn())
	return client.Get(ctx, in, opts...)
}

func (m *defaultMetadataService) Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error) {
	client := pb.NewMetadataServiceClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}

func (m *defaultMetadataService) Put(ctx context.Context, in *PutReq, opts ...grpc.CallOption) (*PutResp, error) {
	client := pb.NewMetadataServiceClient(m.cli.Conn())
	return client.Put(ctx, in, opts...)
}

func (m *defaultMetadataService) Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteResp, error) {
	client := pb.NewMetadataServiceClient(m.cli.Conn())
	return client.Delete(ctx, in, opts...)
}

func (m *defaultMetadataService) BucketInfo(ctx context.Context, in *BucketInfoReq, opts ...grpc.CallOption) (*BucketInfoResp, error) {
	client := pb.NewMetadataServiceClient(m.cli.Conn())
	return client.BucketInfo(ctx, in, opts...)
}
