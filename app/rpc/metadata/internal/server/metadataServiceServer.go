// Code generated by goctl. DO NOT EDIT.
// Source: metadata.proto

package server

import (
	"context"

	"oos-system/app/rpc/metadata/internal/logic"
	"oos-system/app/rpc/metadata/internal/svc"
	"oos-system/app/rpc/metadata/pb"
)

type MetadataServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedMetadataServiceServer
}

func NewMetadataServiceServer(svcCtx *svc.ServiceContext) *MetadataServiceServer {
	return &MetadataServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *MetadataServiceServer) Get(ctx context.Context, in *pb.GetReq) (*pb.GetResp, error) {
	l := logic.NewGetLogic(ctx, s.svcCtx)
	return l.Get(in)
}

func (s *MetadataServiceServer) Create(ctx context.Context, in *pb.CreateReq) (*pb.CreateResp, error) {
	l := logic.NewCreateLogic(ctx, s.svcCtx)
	return l.Create(in)
}

func (s *MetadataServiceServer) Put(ctx context.Context, in *pb.PutReq) (*pb.PutResp, error) {
	l := logic.NewPutLogic(ctx, s.svcCtx)
	return l.Put(in)
}

func (s *MetadataServiceServer) Delete(ctx context.Context, in *pb.DeleteReq) (*pb.DeleteResp, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}

func (s *MetadataServiceServer) BucketInfo(ctx context.Context, in *pb.BucketInfoReq) (*pb.BucketInfoResp, error) {
	l := logic.NewBucketInfoLogic(ctx, s.svcCtx)
	return l.BucketInfo(in)
}
