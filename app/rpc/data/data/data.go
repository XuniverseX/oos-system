// Code generated by goctl. DO NOT EDIT.
// Source: data.proto

package data

import (
	"context"

	"oos-system/app/rpc/data/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetRequest  = pb.GetRequest
	GetResponse = pb.GetResponse
	PutRequest  = pb.PutRequest
	PutResponse = pb.PutResponse

	Data interface {
		Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
		Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	}

	defaultData struct {
		cli zrpc.Client
	}
)

func NewData(cli zrpc.Client) Data {
	return &defaultData{
		cli: cli,
	}
}

func (m *defaultData) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	client := pb.NewDataClient(m.cli.Conn())
	return client.Put(ctx, in, opts...)
}

func (m *defaultData) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	client := pb.NewDataClient(m.cli.Conn())
	return client.Get(ctx, in, opts...)
}
