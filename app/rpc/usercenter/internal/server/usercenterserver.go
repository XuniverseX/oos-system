// Code generated by goctl. DO NOT EDIT.
// Source: usercenter.proto

package server

import (
	"context"

	"oos-system/app/rpc/usercenter/internal/logic"
	"oos-system/app/rpc/usercenter/internal/svc"
	"oos-system/app/rpc/usercenter/usercenter"
)

type UsercenterServer struct {
	svcCtx *svc.ServiceContext
	usercenter.UnimplementedUsercenterServer
}

func NewUsercenterServer(svcCtx *svc.ServiceContext) *UsercenterServer {
	return &UsercenterServer{
		svcCtx: svcCtx,
	}
}

func (s *UsercenterServer) GetCaptcha(ctx context.Context, in *usercenter.GetCaptchaReq) (*usercenter.GetCaptchaResp, error) {
	l := logic.NewGetCaptchaLogic(ctx, s.svcCtx)
	return l.GetCaptcha(in)
}

func (s *UsercenterServer) DelOldCaptcha(ctx context.Context, in *usercenter.DelOldCaptchaReq) (*usercenter.SucResp, error) {
	l := logic.NewDelOldCaptchaLogic(ctx, s.svcCtx)
	return l.DelOldCaptcha(in)
}

func (s *UsercenterServer) Register(ctx context.Context, in *usercenter.RegisterReq) (*usercenter.SucResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UsercenterServer) Login(ctx context.Context, in *usercenter.LoginReq) (*usercenter.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UsercenterServer) GetUserInfo(ctx context.Context, in *usercenter.UserInfoReq) (*usercenter.UserInfoResp, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *UsercenterServer) UpdatePassword(ctx context.Context, in *usercenter.LoginReq) (*usercenter.SucResp, error) {
	l := logic.NewUpdatePasswordLogic(ctx, s.svcCtx)
	return l.UpdatePassword(in)
}

func (s *UsercenterServer) DeleteBySelf(ctx context.Context, in *usercenter.DelReq) (*usercenter.SucResp, error) {
	l := logic.NewDeleteBySelfLogic(ctx, s.svcCtx)
	return l.DeleteBySelf(in)
}

func (s *UsercenterServer) GenerateToken(ctx context.Context, in *usercenter.GenerateTokenReq) (*usercenter.GenerateTokenResp, error) {
	l := logic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}

func (s *UsercenterServer) IsExitUser(ctx context.Context, in *usercenter.IsExitUserReq) (*usercenter.SucResp, error) {
	l := logic.NewIsExitUserLogic(ctx, s.svcCtx)
	return l.IsExitUser(in)
}
