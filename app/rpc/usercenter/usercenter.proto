syntax = "proto3";

package usercenter;

option go_package = "./usercenter";


// model
message GetCaptchaReq {
}
message GetCaptchaResp {
  string id = 1;
  string imgbaseCode = 2;
}

message DelOldCaptchaReq {
  string id = 1;
}
// 成功操作统一返回
message SucResp {
  bool success = 1;
}


message RegisterReq {
  string username = 1;
  string password = 2;
  string uniqueCode = 3;
  string captcha = 4;
}

message LoginReq {
  string  username = 1;
  string password = 2;
}
message LoginResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message UserInfoReq {
  string username = 1;
}
message UserInfoResp {
  string username = 1;
}

message delReq {
  string username = 1;
}


message GenerateTokenReq {
  string username = 1;
}
message GenerateTokenResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message IsExitUserReq {
  string username = 1;
}

// service
service usercenter {
  rpc getCaptcha(GetCaptchaReq) returns(GetCaptchaResp); // 获取验证码
  rpc delOldCaptcha(DelOldCaptchaReq) returns(SucResp); // 删除旧的验证码
  rpc register(RegisterReq) returns(SucResp); // 注册
  rpc login(LoginReq) returns(LoginResp); // 登录
  rpc getUserInfo(UserInfoReq) returns(UserInfoResp); // 获取用户信息 其实没什么信息获取 主要是为了给保持登录状态一个请求接口
  rpc updatePassword(LoginReq) returns(SucResp); // 更新密码
  rpc deleteBySelf(delReq) returns(SucResp); // 注销
  rpc generateToken(GenerateTokenReq) returns(GenerateTokenResp); // 生成token
  rpc isExitUser(IsExitUserReq) returns(SucResp); // 查询用户是否存在
}
